name: Build windows package

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    name: Build package
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Build package
        run: |
          cd src
          poe build-dist -v ${{github.ref_name}}
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        id: release
        with:
          prerelease: ${{startsWith(github.ref, 'refs/tags/') && contains(github.ref, 'rc')}}
          generate_release_notes: true
          files: |
            ./src/dist/py-clash-bot*.msi
      - name: Trigger Discord Webhook
        run: |
          if ($${{startsWith(github.ref, 'refs/tags/') && contains(github.ref, 'rc')}}) {
            $json = @{
                title = "New Pre-release! ${{github.ref_name}}"
                description = "Click to view changes and download"
                url = "${{ steps.release.outputs.url }}"
            } | ConvertTo-Json
            Invoke-RestMethod -Method Post -Uri "https://www.pyclashbot.app/api/webhook/release/prerelease?code=${{ secrets.DISCORD_WEBHOOK_CODE }}" -ContentType 'application/json' -Body $json
          } else {
            $json = @{
                title = "New Release! ${{github.ref_name}}"
                description = "Click to view changes and download"
                url = "${{ steps.release.outputs.url }}"
            } | ConvertTo-Json
            Invoke-RestMethod -Method Post -Uri "https://www.pyclashbot.app/api/webhook/release?code=${{ secrets.DISCORD_WEBHOOK_CODE }}" -ContentType 'application/json' -Body $json
          }
        shell: powershell
